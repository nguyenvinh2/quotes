/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Random;
import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        String site = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        System.out.println(requestQuote(site));
    }

    public static String getLocalQuote(String path) {
        Quote[] quotes = getAllLocalQuotes(path);
        Random rand = new Random();
        int quoteNumber = rand.nextInt(quotes.length);
        String quote = quotes[quoteNumber].getText() + " - " + quotes[quoteNumber].getAuthor();
        return quote;
    }

    public static Quote[] getAllLocalQuotes(String path) {
        String quotesText = null;
        try {
            quotesText = new Scanner(new File(path)).useDelimiter("\\A").next();
        } catch (Exception e) {
            e.printStackTrace();
        }
        Quote[] quotes = new Gson().fromJson(quotesText, Quote[].class);
        return quotes;
    }

    public static String requestQuote(String webAddress) {
        try {
            String inputLine;
            URL url = new URL(webAddress);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("Content-Type", "application/json");
            BufferedReader response = new BufferedReader(
                    new InputStreamReader(connection.getInputStream()));
            StringBuffer contentData = new StringBuffer();
            while ((inputLine = response.readLine()) != null) {
                contentData.append(inputLine);
            }
            response.close();
            connection.disconnect();
            Quote onlineQuote = new Gson().fromJson(contentData.toString(), Quote.class);
            Quote convertQuote = new Quote(onlineQuote.getQuoteText(), onlineQuote.getQuoteAuthor());
            addQuoteToFile(convertQuote);
            return convertQuote.getText() + " - " + convertQuote.getAuthor();
        } catch (Exception e) {
            System.out.println("Unable to retrieve online quote; switching to local cache...");
        }
        String path = "src/main/resources/recentquotes.json";
        return getLocalQuote(path);
    }

    public static void addQuoteToFile(Quote quote) {

    }
}
